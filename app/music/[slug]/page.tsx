import {\n  allReleases,\n  getReleaseById,\n  Platform,\n  ReleaseWithPlatforms,\n  Review,\n} from \'@/lib/musicData\';\nimport { ArrowLeft, Heart, Quote, Star } from \'lucide-react\';\nimport { Metadata } from \'next\';\nimport { Patrick_Hand } from \'next/font/google\';\nimport Image from \'next/image\';\nimport Link from \'next/link\';\nimport { notFound } from \'next/navigation\';\nimport React, { Suspense } from \'react\';\nimport MobileTabs from \'./mobile-tabs\';\n\nconst patrickHand = Patrick_Hand({\n  weight: [\'400\'],\n  subsets: [\'latin\'],\n});\n\n\ninterface PageProps {\n  params: Promise<{ slug: string }>;\n  searchParams: Promise<Record<string, string | string[] | undefined>>;\n}\n\nexport async function generateStaticParams() {\n  return allReleases.map((release: ReleaseWithPlatforms) => ({\n    slug: release.id,\n  }));\n}\n\nexport async function generateMetadata({\n  params,\n}: PageProps): Promise<Metadata> {\n  const resolvedParams = await params;\n  const slug = resolvedParams.slug;\n  const release = getReleaseById(slug);\n\n  if (!release) {\n    return {\n      title: \'Release Not Found\',\n    };\n  }\n  return {\n    title: `${release.title} | Noah Lynch Music`,\n    description: release.description,\n    openGraph: {\n      title: release.title,\n      description: release.description,\n      images: [\n        {\n          url: release.imageURL,\n          width: 800,\n          height: 800,\n          alt: `${release.title} Cover Art`,\n        },\n      ],\n    },\n  };\n}\n\nexport default async function MusicReleasePage({\n  params,\n}: {\n  params: Promise<{ slug: string }>;\n}) {\n  const resolvedParams = await params;\n  const slug = resolvedParams.slug;\n  const release = getReleaseById(slug);\n\n  if (!release) {\n    notFound();\n  }\n\n  const isUpcoming = release.type === \'upcoming\';\n  const typeColor = isUpcoming ? \'text-amber-400\' : \'text-cyan-400\';\n  const typeBgColor = isUpcoming ? \'bg-amber-900/50\' : \'bg-cyan-900/50\';\n  const typeBorderColor = isUpcoming\n      ? \'border-amber-700/50\'\n      : \'border-cyan-700/50\';\n\n  const PlatformButtons = (\n      <>\n        <h2 className="mb-2 md:mb-4 text-base md:text-xl font-semibold text-center md:text-left">Listen Now:</h2>\n        <div className="grid grid-cols-2 gap-3 md:gap-4 justify-center md:justify-start">\n          {release.platforms.map((platform: Platform) => {\n            const buttonStyle: React.CSSProperties = {};\n            const iconStyle: React.CSSProperties = {};\n\n            if (platform.bgColor) {\n              buttonStyle.backgroundColor = platform.bgColor;\n              iconStyle.color = platform.color || \'#FFFFFF\';\n            } else if (platform.color) {\n              iconStyle.color = platform.color;\n            }\n\n            return (\n                <Link\n                    key={platform.name}\n                    href={platform.url}\n                    target="_blank"\n                    rel="noopener noreferrer"\n                    className="flex flex-col sm:flex-row items-center justify-center gap-1 sm:gap-2 rounded-lg border border-zinc-700/50 bg-zinc-800/70 px-2 py-1.5 sm:px-4 sm:py-2 text-zinc-300 transition-all hover:bg-zinc-700/90 hover:text-white group"\n                    style={platform.bgColor ? buttonStyle : {}}\n                    aria-label={`Listen on ${platform.name}`}\n                >\n                  <div style={iconStyle} className="group-hover:opacity-80 transition-opacity">\n                    {platform.icon}\n                  </div>\n                  <span\n                      className="text-xs sm:text-sm font-medium hidden sm:inline"\n                      style={platform.bgColor ? {color: platform.color || \'#FFFFFF\'} : {}}\n                  >\n                {platform.name}\n              </span>\n                  <span\n                      className="text-[10px] sm:hidden"\n                      style={platform.bgColor ? {color: platform.color || \'#FFFFFF\'} : {}}\n                  >\n                {platform.name.split(\' \')[0]}\n              </span>\n                </Link>\n            );\n          })}\n        </div>\n      </>\n  );\n\n  const ListenNowLinks = (\n      <div className="w-full border-t border-zinc-700/60 pt-4 md:pt-6">\n        {isUpcoming && release.linkURL ? (\n            <Link\n                href={release.linkURL}\n                target="_blank"\n                rel="noopener noreferrer"\n                className="block w-full rounded-full bg-amber-600 px-6 py-3 text-center font-bold text-black transition-all duration-300 hover:bg-amber-500"\n            >\n              {release.linkText || \'Coming Soon\'}\n            </Link>\n        ) : release.platforms && release.platforms.length > 0 ? (\n            PlatformButtons\n        ) : (\n            <p className="text-center text-zinc-500">Details coming soon.</p>\n        )}\n      </div>\n  );\n\n  const SpecialThanksContent = (\n      <div className={`${patrickHand.className} text-center md:text-lg lg:text-xl leading-relaxed text-amber-100/90`}>\n        <p className="text-center font-medium">\n          Bringing "Honest" to life has been one of the most meaningful creative experiences of my life, and I couldn\'t\n          have done it without the support, talent, and heart of some truly incredible people.\n          To Levi Ready, Isaac Moreno, <strong>Tyler Bridge</strong>, <strong>Jamie Wroten</strong>, <strong>Tyler\n          Williams</strong>, <strong>Christopher Chittom</strong>, <strong>Evan Busbin</strong>, <strong>Hagen\n          Brister</strong>, and <strong>Sherry Thibodeaux</strong>â€”thank you for your time, energy, and the unique ways\n          each of you contributed to this song.\n          <br/>\n          <br/>\n          And last but never least, to my amazing wife <strong>Hunter Lynch</strong> your love, strength, and unwavering\n          belief in me are the foundation of everything I do. Thank you for being my home, my muse, and my greatest\n          encouragement.\n        </p>\n        <p className="mt-4 text-center">\n          With all my gratitude,\n          <br/>\n          - <strong>Noah Lynch <Heart className="h-4 w-4 text-red-400 inline-block ml-1 relative -top-px"/></strong>\n        </p>\n      </div>\n  );\n\n  const spotlightReviewData: Review = {\n    name: \'Josh Harding\',\n    content: `\"In all my life, I have never felt so deeply connected to a song. Yeah, I\'ve had songs that I play constantly to bring a tear every now and then, but within seconds you made me fall apart and breakdown."\n\n    Your voice, energy, and passion for "Honest" saved me from having a complete mental breakdown. You, Sir, are a true talent in music and will go incredibly far...\"`,\n    rating: 5,\n  };\n\n  const SpotlightReviewContent = (\n      <div className="relative flex flex-col flex-grow">\n        <div className="absolute -left-4 top-0 opacity-30">\n          <Quote className="h-16 w-16 text-zinc-600/30 rotate-180" fill="currentColor"/>\n        </div>\n\n        <div\n            className={`${patrickHand.className} text-base md:text-lg lg:text-xl tracking-wide leading-relaxed text-amber-100/90 z-10 relative whitespace-pre-wrap`}>\n          {spotlightReviewData.content}\n        </div>\n\n        <div className="absolute -right-4 bottom-0 opacity-30">\n          <Quote className="h-16 w-16 text-amber-400/30" fill="currentColor"/>\n        </div>\n\n        <div className="mt-auto pt-4 text-right">\n          <p className="text-amber-200 font-semibold text-sm">{spotlightReviewData.name}</p>\n          <div className="flex justify-end">\n            {Array.from({length: spotlightReviewData.rating}).map((_, i) => (\n                <Star\n                    key={i}\n                    className="h-3 w-3 md:h-4 md:w-4 text-amber-400"\n                    fill="currentColor"\n                />\n            ))}\n          </div>\n        </div>\n      </div>\n  );\n\n  const BackToMusicLink = (\n      <div className="mt-6 md:mt-8 text-center md:text-left">\n        <Link\n            href="/#music"\n            className="text-sm text-zinc-400 transition-colors hover:text-amber-200 duration-300 inline-flex items-center"\n        >\n          <ArrowLeft className="h-4 w-4 inline-block mr-2"/> Back to All Music\n        </Link>\n      </div>\n  );\n\n  return (\n      <div className="relative min-h-screen text-white">\n        <div className="absolute inset-0 z-0 overflow-hidden">\n          <Image\n              src={release.imageURL}\n              alt={`${release.title} Background`}\n              fill\n              priority\n              sizes="100vw"\n              className="object-cover blur-md brightness-50"\n          />\n          <div className="absolute inset-0 bg-black/60"></div>\n        </div>\n\n        <Suspense fallback={<div className="h-screen w-full flex items-center justify-center">Loading...</div>}>\n          <div className="relative z-10 px-4 py-16 sm:px-6 lg:px-8 lg:py-24 max-w-5xl mx-auto">\n\n            {/* Main Content Area: Desktop Two-Column, Mobile Stacked */}\n            <div className="md:flex md:gap-8 lg:gap-12">\n\n              {/* Left Column (Desktop) / Top (Mobile): Cover Art */}\n              <div className="md:w-2/5 lg:w-1/3 md:sticky md:top-24 h-full flex-shrink-0 mb-8 md:mb-0">\n                <div\n                    className="relative aspect-square w-full overflow-hidden rounded-lg border border-zinc-800/60 shadow-xl">\n                  <Image\n                      src={release.imageURL}\n                      alt={`${release.title} Cover Art`}\n                      fill\n                      priority={slug === \'honest\' || slug === \'good-things-take-time\' || slug === \'for-you\'}\n                      sizes="(max-width: 767px) 90vw, (max-width: 1023px) 40vw, 33vw"\n                      className="object-cover"\n                  />\n                </div>\n              </div>\n\n              {/* Right Column (Desktop) / Bottom (Mobile): Details, Description, Links */}\n              <div className="md:w-3/5 lg:w-2/3">\n                <div className="flex flex-col sm:flex-row justify-between items-start gap-2 mb-3">\n                  <h1 className="text-3xl sm:text-4xl lg:text-5xl font-bold tracking-tight text-zinc-50">\n                    {release.title}\n                  </h1>\n                  <div\n                      className={`mt-1 sm:mt-0 whitespace-nowrap rounded-full px-3 py-1 text-xs font-semibold ${typeBgColor} ${typeColor} border ${typeBorderColor}`}\n                  >\n                    {release.type === \'upcoming\'\n                        ? \'UPCOMING\'\n                        : release.type === \'out-now\'\n                            ? \'NEW RELEASE\'\n                            : \'PREVIOUS\'}\n                  </div>\n                </div>\n\n                <div className="mb-4 space-y-1 text-sm text-zinc-300">\n                  <p>\n                    <span className="text-zinc-500">Released by:</span>{\' \}\n                    {release.releasedBy}\n                  </p>\n                  <p>\n                    <span className="text-zinc-500">Release date:</span>{\' \}\n                    {release.releaseDate}\n                  </p>\n                </div>\n\n                <div className="prose prose-sm prose-invert max-w-none text-zinc-300 leading-relaxed mb-6">\n                  {release.description}\n                </div>\n                \n                {BackToMusicLink} {/* Moved BackToMusicLink here, before ListenNowLinks */}\n\n                {/* Listen Now Links Section - Render only if platforms exist or it\'s upcoming with a link */}\n                {(!isUpcoming || (isUpcoming && release.linkURL) || (release.platforms && release.platforms.length > 0)) && (\n                  <div className="mt-6 md:mt-8"> {/* Adjusted margin for BackToMusicLink being above */}\n                    {ListenNowLinks} \n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Conditional sections for "Honest" song only - Placed AFTER main content block */}\n            {slug === \'honest\' && (\n                <div className="mt-12 md:mt-16 pt-8 border-t border-zinc-700/60">\n                  {/* Mobile Tabbed Interface for Honest */}\n                  <div className="lg:hidden">\n                    <MobileTabs specialThanksContent={SpecialThanksContent}\n                                spotlightReviewContent={SpotlightReviewContent}/>\n                  </div>\n\n                  {/* Desktop Two-Column Layout for Honest - Added lg:items-start */}\n                  <div className="hidden lg:grid lg:grid-cols-2 lg:gap-8">\n                    <div\n                        className="p-6 border border-zinc-700/60 rounded-lg bg-black/30 shadow-lg backdrop-blur-sm flex flex-col">\n                      <h2 className="mb-6 text-2xl font-semibold text-amber-100 text-center">\n                        Special Thanks\n                      </h2>\n                      {SpecialThanksContent}\n                    </div>\n                    <div\n                        className="p-6 border border-zinc-700/60 rounded-lg bg-black/30 shadow-lg backdrop-blur-sm flex flex-col">\n                      <h2 className="mb-6 text-2xl font-semibold text-amber-100 text-center flex items-center justify-center">\n                        <Star className="h-5 w-5 mr-2 text-amber-300" fill="currentColor"/>\n                        <span>Spotlight Review</span>\n                        <Star className="h-5 w-5 ml-2 text-amber-300" fill="currentColor"/>\n                      </h2>\n                      {SpotlightReviewContent}\n                    </div>\n                  </div>\n                </div>\n            )}\n          </div>\n        </Suspense>\n      </div>\n  );\n}\n